name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Create Release
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Setup Certificate
        run: |
          echo "==> Setting code signing certificate..."
          #Create a temporary keychain
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          
          #Decode and import certificate
          echo '${{ secrets.CERTIFICATE_P12 }}' | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P '${{ secrets.CERTIFICATE_PASSWORD }}' -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          
          #Set environment variable to tell Makefile to use the CI environment variable
          echo "CI_BUILD=true" >> $GITHUB_ENV

      - name: Build Packages
        run: |
          make VERSION=${{ env.VERSION }} CI_BUILD=true dmg

      - name: Verify Architecture Support
        run: |
          echo "==> Check release version architecture compatibility..."
          make check-arch

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "## ConfigForge ${{ env.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### Update" >> release_notes.md
          echo "- Please check the specific commit record for detailed update content." >> release_notes.md
          echo "" >> release_notes.md
          echo "### Supported System" >> release_notes.md
          echo "- macOS 11.0 or higher" >> release_notes.md
          echo "- Provide two versions:" >> release_notes.md
          echo "  - Intel version: Suitable for Intel chip Mac" >> release_notes.md
          echo "  - Apple Silicon version: Suitable for M series chip Mac" >> release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            build/ConfigForge-x86_64.dmg
            build/ConfigForge-arm64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Homebrew Update
        #Trigger workflow only when release is successful
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PAT }}
          event-type: trigger-homebrew-update
          client-payload: '{"version": "${{ env.VERSION }}"}'

      - name: Update Latest Tag
        run: |
          git tag -f latest
          git push origin latest --force 